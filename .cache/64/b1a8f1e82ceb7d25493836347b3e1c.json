{"id":"js/ProcessingAPI.js","dependencies":[{"name":"C:\\Users\\79814\\OneDrive\\Рабочий стол\\Web-portal-to-Alvaro\\Projects\\RickAndMortyCards\\package.json","includedInParent":true,"mtime":1631541015530},{"name":"regenerator-runtime/runtime","loc":{"line":1,"column":7},"parent":"C:\\Users\\79814\\OneDrive\\Рабочий стол\\Web-portal-to-Alvaro\\Projects\\RickAndMortyCards\\js\\ProcessingAPI.js","resolved":"C:\\Users\\79814\\OneDrive\\Рабочий стол\\Web-portal-to-Alvaro\\Projects\\RickAndMortyCards\\node_modules\\regenerator-runtime\\runtime.js"},{"name":"rickmortyapi","loc":{"line":2,"column":28},"parent":"C:\\Users\\79814\\OneDrive\\Рабочий стол\\Web-portal-to-Alvaro\\Projects\\RickAndMortyCards\\js\\ProcessingAPI.js","resolved":"C:\\Users\\79814\\OneDrive\\Рабочий стол\\Web-portal-to-Alvaro\\Projects\\RickAndMortyCards\\node_modules\\rickmortyapi\\dist\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProcessingAPI = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _rickmortyapi = require(\"rickmortyapi\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ProcessingAPI = /*#__PURE__*/function () {\n  function ProcessingAPI() {\n    _classCallCheck(this, ProcessingAPI);\n  }\n\n  _createClass(ProcessingAPI, [{\n    key: \"getAPI\",\n    value: function () {\n      var _getAPI = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _rickmortyapi.getEpisodes)();\n\n              case 2:\n                this.responce = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAPI() {\n        return _getAPI.apply(this, arguments);\n      }\n\n      return getAPI;\n    }()\n  }]);\n\n  return ProcessingAPI;\n}();\n\nexports.ProcessingAPI = ProcessingAPI;\nvar test = 'test variable';"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"js/ProcessingAPI.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"js/ProcessingAPI.js","original":{"line":2,"column":0}},{"name":"ProcessingAPI","generated":{"line":22,"column":4},"source":"js/ProcessingAPI.js","original":{"line":4,"column":13}},{"generated":{"line":23,"column":0},"source":"js/ProcessingAPI.js","original":{"line":5,"column":3}},{"generated":{"line":23,"column":27},"source":"js/ProcessingAPI.js","original":{"line":5,"column":17}},{"generated":{"line":24,"column":0},"source":"js/ProcessingAPI.js","original":{"line":5,"column":17}},{"generated":{"line":25,"column":0},"source":"js/ProcessingAPI.js","original":{"line":5,"column":20}},{"generated":{"line":30,"column":76},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":31,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":32,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":33,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":34,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":35,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":36,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":36,"column":23},"source":"js/ProcessingAPI.js","original":{"line":8,"column":28}},{"generated":{"line":36,"column":55},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":38,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":39,"column":0},"source":"js/ProcessingAPI.js","original":{"line":8,"column":6}},{"name":"responce","generated":{"line":39,"column":21},"source":"js/ProcessingAPI.js","original":{"line":8,"column":11}},{"generated":{"line":39,"column":29},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":41,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":42,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":43,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":44,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":45,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":46,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":47,"column":0},"source":"js/ProcessingAPI.js","original":{"line":7,"column":3}},{"generated":{"line":61,"column":0},"source":"js/ProcessingAPI.js","original":{"line":12,"column":0}},{"name":"test","generated":{"line":61,"column":4},"source":"js/ProcessingAPI.js","original":{"line":12,"column":4}},{"generated":{"line":61,"column":8},"source":"js/ProcessingAPI.js","original":{"line":12,"column":8}},{"generated":{"line":61,"column":11},"source":"js/ProcessingAPI.js","original":{"line":12,"column":11}},{"generated":{"line":61,"column":26},"source":"js/ProcessingAPI.js","original":{"line":12,"column":0}}],"sources":{"js/ProcessingAPI.js":"import 'regenerator-runtime/runtime';\r\nimport { getEpisodes } from 'rickmortyapi';\r\n\r\nexport class ProcessingAPI {\r\n   constructor() { }\r\n\r\n   async getAPI() {\r\n      this.responce = await getEpisodes();\r\n   }\r\n}\r\n\r\nlet test = 'test variable';"},"lineCount":null}},"error":null,"hash":"389c25878144f4ece7492ef6ce6ec4d5","cacheData":{"env":{}}}